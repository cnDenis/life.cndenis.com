var tipuesearch = {"pages":[{"title":"又折腾了一回linux","text":"实在觉得Windows10不爽, 于是想装个Linux玩玩. 这个春节除了给博客搬家外, 也在自己的机上装好了个Ubuntu环境. 这两篇博文就是在Ubuntu下写的. 虽然自己工作就编写运行在Linux下的代码, 但我却对折腾这个系统本身不太感兴趣. 反正公司有运维, 线上有云服务, 都是现成装好的系统, 不用自己去折腾. 上一次在自己的机器上装Linux似乎已经是还在学校的时候, 七八年前的事了. IT界七八年已经是三四个摩尔周期, 跨世代般的遥远了. 折腾起来发现啥都和以前不一样了, 自己落伍好多了. 首先装系统要分区, 找到我用起来最顺手的EPM(吐槽一下, 这软件支持十几种语言, 唯独没有中文版, 但却是国内的公司出品的), 分区表的样子跟以前的不太一样了, 多了好几个不道知做什么的小分区. 查了一下才知道现在的分区表用的是GPT了, 不像以前的MBR需要搞扩展分区. 启动方式也变成了UEFI, 不再叫BIOS了. 把以前的数据盘缩小了一下, 腾出50G的空闲, 就可以准备装系统了. 装啥版本呢? 毕竟是想要一个实用的系统而不是只是单纯的体验一下, 按以前的印像用Ubuntu应该是最省心的, 版本选LTS的, 尽可能减少麻烦. 怎么装呢, 想当年有个东西可以在Windows下装Ubuntu的工具, 叫Wubi, 找了一下发现在五年前就已经不再支持了(再次感慨自己的知识好陈旧...), 我的笔记本没有光驱, 虽然有外置光驱但也没有可以刻录的光盘, 还是找个U盘做启动盘吧. 插上U盘, 重启. 开机狂拍F2, F10, F12, Del, 全试了一遍, 每次都是进了Windows. 放狗搜了一下才发现这联想的机器侧面有个不显眼的专用按钮是用来开启动选项的. 这都行... 真是开眼界了. U盘引导成功, 寻常设置略过不表, 硬盘分区, 按以前的经验, 根目录给10G, /boot给100M, 其余都是/home, 确定, 开始安装, 拿起手机边玩边等. 回来一看, 报错了, 似乎是复制文件过程中的问题. 重启后直接进Windows, 说明Grub2都还没装上. 难道下载的镜像或是安装盘做得有问下? 查了一下光盘镜像的Hash, 没错, 难道镜像的内容本身有问题? 这可能性也太小了吧. 回Windows在VMware虚拟机里用这个镜像装了一次, 顺利装好进系统. 镜像是没问题的. 重新做了个U盘安装盘, 安装前先运行安装文件检查, 也没有问题, 再装一次, 还是报错, 而且报错的地方和上次还不一样. 难道我的硬盘有坏道? 用HDTune扫全盘, 跑了几个小时, 全是绿块. 试着把分区大小调了一下, 安装终于成功了. 但进系统后安装更新报错, 说是/boot满了. 搜了一下才知道, 原来现在 /boot推荐大小已经是0.5~1GB了 , 最初给的100M连装系统都不够, 后来给了200M能装上系统但不够装更新, 于是我又重新格盘分了1G给/boot, 再重装了一次, 安装系统终于告一段落了. 然后就是各种调教. 先装科学上网的梯子, 装Chrome, 配置代理, 装输入法, 装开发环境, 装Sublime Text, 各种搜索查找折腾略过不表. 然后终于可以开始写Blog啦啦啦, 咦, 怎么打字进Sublime没反应. 放狗一查居然说是Sublime的Bug, 不兼容中文输入法fcitx, 要 打个补丁 并且还要从命令行启动才可以. 而且应用中发现打补丁后还有Bug, 开多个Sublime窗口输入中文会出问题. 这种体验简直让人无语, 真的要用户安慰自己说免费的就不要太高要求么... 终于可以打进字了, 为啥中英混排的地方, 英文比中文要高半行? 这特么太难看了吧. 上网搜好用的等宽字体, 那些介绍十种好看的字体的人都特么是不用中文的高人么? 一个个下载下来试看, 中文显示或是中英混排都是一垞屎. 我在Windows下用的是Consolas, 也有不少人推荐用它和雅黑的混合体, 装上去初看是不错, 但一看Python代码就不对劲, 空格和别的字母居然不是等宽的! 最后还是知乎找到有人推荐这个Iosevka, 至少看起来是正常的字体: 中英文等高, 宽度2:1, 空格与英文等宽. 搞了这么一大通, 终于有个基本能用的桌面了. 就这样的使用体验, Linux的桌面市场可想而知. 整个过程如果不是一个能折腾的程序员估计是难以搞定的. 还想吐槽一下网上的中文信息, 错误的和落后的资料太多了, 照着做就是各种踩雷. 生命在于折腾嘛, 哪天折腾不动了, 那就真的是老了...","tags":"折腾电脑","url":"https://www.liuzz.xyz/post/2018/03/install_linux_again.html","loc":"https://www.liuzz.xyz/post/2018/03/install_linux_again.html"},{"title":"给博客搬了个家","text":"作为一个码农, 博客是自己最基础的招牌了, 这个春节有时间把博客重新打理了一下, 换个了看起来现代化一些的主题, 至少不至于一眼看去太难堪. 技术博客都好几年没有更新了. 之前有一次想继续写一下, 在自己电脑装Github Page的官方开发环境, 发现相当麻烦. Github把版本升级了, 原先有些东西不能用了, 这让我相当的郁闷, 好端端的升啥级呢, 而且还搞不兼容升级, 这不是坑么. Jekyll是基于Ruby的, 我又不太熟悉, 出问题没法RTFC来解决, 而且Ruby对于Windows的开发环境还不太友好, 再加上伟大的墙, 各种麻烦折腾得我都不想写了. 这次把渲染引擎换成基于Python的Pelican, 至少环境可控, 不会一提交就收到渲染失败的通知邮件. Pelican一开始整还是一头雾水的, 引擎加模板几十个参数慢慢看, 一个个试效果. 断断续续搞了几天终于把博客搞得稍微像样一点了 然后发布又是个问题. Github Page目前分为两类页面: 用户页面和项目页面. 用户页面就是 cndenis.github.io根目录上的那个页面, 项目页面是子目录下的. 原先是可以选择在master根目录, master的/doc目录或gh-pages分支这三者里选一个发布的, 现在只能够在master分支的根目录上发布. 这就有点蛋疼了, 原先用Jekyll的话, 因为渲染是Github帮我做的, 我把源码写在master提交上去, Github帮我出页面, 不影响我写的源码. 但现在改用Pelican后是我自己生成页面后提交, 要不然就是把生成的页面和源码都混在一起, 要不就是要把源码放到其他分支去. 这两者我都不想. 好在项目页面可以选择在gh-pages分支上发布, 于是我就把代码迁到一个新的项目上搞. 反正我有自己的域名, 主页就不用放在某个子路径下了. 刚才测试看了一下这个页面的效果, 发现是一大堆小小的密密麻麻的字, 一眼看上去就像教科书般的不爽. 既然是个随手写写吐槽的地方嘛, 就该疏一些, 反正也不需要显示代码. 于是又要开始调CSS. 在网上找了一下, 简书的配置似乎看起来比较舒服, 于是把字体行距什么的抄了一下. 似乎是好一些了. 现在好多博客都流行简约化了, 侧边栏上的那堆信息其实没啥用也没啥人看的, 很多地方都省掉了. 不过我觉得现在显示器够宽, 留着也没关系. 正文太宽行太长的话, 看着也不舒服. 手机嘛, 有响应式布局, 会自适应的. 现在博客分为两个, 那个 https://blog.cndenis.com 是写技术笔记的, 这个 https://life.cndenis.com 是写些杂七杂八的琐碎事的, 还是分开好. 我也不希望在浏览技术博客时看到一乱七八糟的文字, 相信别人也一样.","tags":"折腾电脑","url":"https://www.liuzz.xyz/post/2018/02/blog_migrated_to_new_site.html","loc":"https://www.liuzz.xyz/post/2018/02/blog_migrated_to_new_site.html"}]};